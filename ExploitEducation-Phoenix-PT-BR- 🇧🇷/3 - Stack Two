Objetivo:
Similar à anterior, a gente precisa mudar o valor da variavel changeme,
mas dessa vez ao inves de usar o input ou agrv, vamos usar env!

Explicação:
Nesse desafio, o programa usa getenv("ExploitEducation") para ler uma
enviroment variable. Essas variaveis são acessiveis para todos os programas
executando naquela seção. E normalmente contem preferencias como cores, o tipo de terminal, etcetc....
Você pode checa-las usando: $ env
Você pode definir uma até o resto da seção: $ export Nome=Valor
Você pode definir uma somente para execução daquele programa: $ Nome=Valor ./stack-two

Para nós, não faz tanta diferença. O unico problema é que não podemos usar o Null Byte (0x00), pois
ele é usado para indicar o final de uma string ASCII, portanto terminando nossa variavel precocemente.


Em seguida, o valor é copiado para um buffer[64] usando: strcpy(buffer, ptr). Com ptr sendo o valor da env 'ExploitEducation'.
A função strcpy, assim como gets, não checa se o valor é maior que o buffer, tornando o programa vulnerável... :(

Por ultimo, o programa checa se changeme == 0x0d0a090a.
Levando em consideração que o sistema é LE: 0a 09 0a 0d
Mas pera ai, checando o manual ascii, esses caracteres são usados para encerrar linha, não é uma letra do teclado! D:
Pois é, então vamos precisar usar os bytes diretamente. Esse é um dos casos que o python3 reclama e o python2 funciona!

Se você quer tentar resolver sozinhe, agora é a sua hora!

.
.
.
.

user@phoenix-amd64:/opt/phoenix/amd64$ ExploitEducation=$(python -c "print b'A'*64 + b'\x0a\x09\x0a\x0d'") ./stack-two 
Welcome to phoenix/stack-two, brought to you by https://exploit.education
Well done, you have successfully set changeme to the correct value

Uhuuu, esse foi mais fácil :D

Solução: $ ExploitEducation=$(python -c "print b'A'*64 + b'\x0a\x09\x0a\x0d'") ./stack-two
